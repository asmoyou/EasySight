"""add_data_type_to_system_configs

Revision ID: 90d1649e32ce
Revises: 29732074509a
Create Date: 2025-06-26 16:18:51.212907

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '90d1649e32ce'
down_revision = '29732074509a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_roles_id', table_name='user_roles')
    op.drop_table('user_roles')
    op.drop_index('ix_roles_id', table_name='roles')
    op.drop_index('ix_roles_name', table_name='roles')
    op.drop_table('roles')
    op.drop_index('ix_permissions_id', table_name='permissions')
    op.drop_index('ix_permissions_name', table_name='permissions')
    op.drop_table('permissions')
    op.add_column('system_configs', sa.Column('data_type', sa.String(length=20), nullable=True, comment='值类型(string, int, float, bool, json)'))
    op.add_column('system_configs', sa.Column('validation_rule', sa.Text(), nullable=True, comment='验证规则'))
    op.drop_column('system_configs', 'value_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('system_configs', sa.Column('value_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='值类型(string, int, float, bool, json)'))
    op.drop_column('system_configs', 'validation_rule')
    op.drop_column('system_configs', 'data_type')
    op.create_table('permissions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='权限名称'),
    sa.Column('display_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='显示名称'),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='权限描述'),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='权限分类'),
    sa.Column('module', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='所属模块'),
    sa.Column('permission_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='权限类型'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否启用'),
    sa.Column('is_system', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否系统权限'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id', name='permissions_pkey')
    )
    op.create_index('ix_permissions_name', 'permissions', ['name'], unique=False)
    op.create_index('ix_permissions_id', 'permissions', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('roles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='角色名称'),
    sa.Column('display_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='显示名称'),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True, comment='角色描述'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否启用'),
    sa.Column('is_system', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否系统角色'),
    sa.Column('permissions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='角色权限列表'),
    sa.Column('page_permissions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='页面权限配置'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_roles_name', 'roles', ['name'], unique=False)
    op.create_index('ix_roles_id', 'roles', ['id'], unique=False)
    op.create_table('user_roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='用户ID'),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='角色ID'),
    sa.Column('assigned_by', sa.INTEGER(), autoincrement=False, nullable=True, comment='分配者ID'),
    sa.Column('assigned_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='分配时间'),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='过期时间'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='是否有效'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='创建时间'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], name='user_roles_assigned_by_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='user_roles_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_roles_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_roles_pkey')
    )
    op.create_index('ix_user_roles_id', 'user_roles', ['id'], unique=False)
    # ### end Alembic commands ###